#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.2 on 2011-10-20 20:38:37.

require 'adwords_api/errors'

module AdwordsApi; module V201109; module TrafficEstimatorService
  class TrafficEstimatorServiceRegistry
    TRAFFICESTIMATORSERVICE_METHODS = {:get=>{:input=>[{:type=>"TrafficEstimatorSelector", :max_occurs=>1, :min_occurs=>0, :name=>:selector}], :output=>{:fields=>[{:type=>"TrafficEstimatorResult", :max_occurs=>1, :min_occurs=>0, :name=>:rval}], :name=>"get_response"}}}
    TRAFFICESTIMATORSERVICE_TYPES = {:KeywordEstimate=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:criterion_id}, {:type=>"StatsEstimate", :max_occurs=>1, :min_occurs=>0, :name=>:min}, {:type=>"StatsEstimate", :max_occurs=>1, :min_occurs=>0, :name=>:max}], :base=>"Estimate"}, :AgeRange=>{:fields=>[{:type=>"AgeRange.AgeRangeType", :max_occurs=>1, :min_occurs=>0, :name=>:age_range_type}], :ns=>0, :base=>"Criterion"}, :AdGroupEstimateRequest=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:ad_group_id}, {:type=>"KeywordEstimateRequest", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:keyword_estimate_requests}, {:type=>"Money", :max_occurs=>1, :min_occurs=>0, :name=>:max_cpc}], :base=>"EstimateRequest"}, :ProductCondition=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:argument}, {:type=>"ProductConditionOperand", :max_occurs=>1, :min_occurs=>0, :name=>:operand}], :ns=>0}, :Polygon=>{:fields=>[{:type=>"GeoPoint", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:vertices}], :ns=>0, :base=>"Criterion"}, :KeywordEstimateRequest=>{:fields=>[{:type=>"Keyword", :max_occurs=>1, :min_occurs=>0, :name=>:keyword}, {:type=>"Money", :max_occurs=>1, :min_occurs=>0, :name=>:max_cpc}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:is_negative}], :base=>"EstimateRequest"}, :NetworkSetting=>{:fields=>[{:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:target_google_search}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:target_search_network}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:target_content_network}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:target_content_contextual}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:target_partner_search_network}], :ns=>0}, :Keyword=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:text}, {:type=>"KeywordMatchType", :max_occurs=>1, :min_occurs=>0, :name=>:match_type}], :ns=>0, :base=>"Criterion"}, :DoubleValue=>{:fields=>[{:type=>"double", :max_occurs=>1, :min_occurs=>0, :name=>:number}], :ns=>0, :base=>"NumberValue"}, :Carrier=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:name}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:country_code}], :ns=>0, :base=>"Criterion"}, :CampaignEstimate=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:campaign_id}, {:type=>"AdGroupEstimate", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:ad_group_estimates}], :base=>"Estimate"}, :Proximity=>{:fields=>[{:type=>"GeoPoint", :max_occurs=>1, :min_occurs=>0, :name=>:geo_point}, {:type=>"Proximity.DistanceUnits", :max_occurs=>1, :min_occurs=>0, :name=>:radius_distance_units}, {:type=>"double", :max_occurs=>1, :min_occurs=>0, :name=>:radius_in_units}, {:type=>"Address", :max_occurs=>1, :min_occurs=>0, :name=>:address}], :ns=>0, :base=>"Criterion"}, :Product=>{:fields=>[{:type=>"ProductCondition", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:conditions}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:text}], :ns=>0, :base=>"Criterion"}, :NumberValue=>{:fields=>[], :ns=>0, :abstract=>true, :base=>"ComparableValue"}, :StatsEstimate=>{:fields=>[{:type=>"Money", :max_occurs=>1, :min_occurs=>0, :name=>:average_cpc}, {:type=>"double", :max_occurs=>1, :min_occurs=>0, :name=>:average_position}, {:type=>"float", :max_occurs=>1, :min_occurs=>0, :name=>:clicks_per_day}, {:type=>"Money", :max_occurs=>1, :min_occurs=>0, :name=>:total_cost}]}, :SoapHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:auth_token}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:client_customer_id}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:developer_token}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:user_agent}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:validate_only}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:partial_failure}], :ns=>0}, :Gender=>{:fields=>[{:type=>"Gender.GenderType", :max_occurs=>1, :min_occurs=>0, :name=>:gender_type}], :ns=>0, :base=>"Criterion"}, :EntityNotFound=>{:fields=>[{:type=>"EntityNotFound.Reason", :max_occurs=>1, :min_occurs=>0, :name=>:reason}], :ns=>0, :base=>"ApiError"}, :CampaignEstimateRequest=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:campaign_id}, {:type=>"AdGroupEstimateRequest", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:ad_group_estimate_requests}, {:type=>"Criterion", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:criteria}, {:type=>"NetworkSetting", :max_occurs=>1, :min_occurs=>0, :name=>:network_setting}, {:type=>"Money", :max_occurs=>1, :min_occurs=>0, :name=>:daily_budget}], :base=>"EstimateRequest"}, :CriterionUserInterest=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:user_interest_id}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:user_interest_name}], :ns=>0, :base=>"Criterion"}, :OperationAccessDenied=>{:fields=>[{:type=>"OperationAccessDenied.Reason", :max_occurs=>1, :min_occurs=>0, :name=>:reason}], :ns=>0, :base=>"ApiError"}, :Address=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:street_address}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:street_address2}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:city_name}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:province_code}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:province_name}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:postal_code}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:country_code}], :ns=>0}, :TrafficEstimatorResult=>{:fields=>[{:type=>"CampaignEstimate", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:campaign_estimates}]}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:request_id}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:service_name}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:method_name}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:operations}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:response_time}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:units}], :ns=>0}, :Language=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:code}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:name}], :ns=>0, :base=>"Criterion"}, :GeoPoint=>{:fields=>[{:type=>"int", :max_occurs=>1, :min_occurs=>0, :name=>:latitude_in_micro_degrees}, {:type=>"int", :max_occurs=>1, :min_occurs=>0, :name=>:longitude_in_micro_degrees}], :ns=>0}, :Estimate=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:estimate_type}]}, :CriterionUserList=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:user_list_id}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:user_list_name}, {:type=>"CriterionUserList.MembershipStatus", :max_occurs=>1, :min_occurs=>0, :name=>:user_list_membership_status}], :ns=>0, :base=>"Criterion"}, :TrafficEstimatorSelector=>{:fields=>[{:type=>"CampaignEstimateRequest", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:campaign_estimate_requests}]}, :Platform=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:platform_name}], :ns=>0, :base=>"Criterion"}, :Placement=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:url}], :ns=>0, :base=>"Criterion"}, :Location=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:location_name}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:display_type}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:is_obsolete}, {:type=>"Location", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:parent_locations}], :ns=>0, :base=>"Criterion"}, :EstimateRequest=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:estimate_request_type}], :abstract=>true}, :Vertical=>{:fields=>[{:type=>"string", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:path}], :ns=>0, :base=>"Criterion"}, :ProductConditionOperand=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:operand}], :ns=>0}, :EntityAccessDenied=>{:fields=>[{:type=>"EntityAccessDenied.Reason", :max_occurs=>1, :min_occurs=>0, :name=>:reason}], :ns=>0, :base=>"ApiError"}, :Criterion=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:id}, {:type=>"Criterion.Type", :max_occurs=>1, :min_occurs=>0, :name=>:type}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:criterion_type}], :ns=>0}, :ComparableValue=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:comparable_value_type}], :ns=>0, :abstract=>true}, :AdGroupEstimate=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:ad_group_id}, {:type=>"KeywordEstimate", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:keyword_estimates}], :base=>"Estimate"}, :OperatingSystemVersion=>{:fields=>[], :ns=>0, :base=>"Criterion"}, :Money=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:micro_amount}], :ns=>0, :base=>"ComparableValue"}, :LongValue=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:number}], :ns=>0, :base=>"NumberValue"}}
    TRAFFICESTIMATORSERVICE_NAMESPACES = ["https://adwords.google.com/api/adwords/cm/v201109"]

    def self.get_method_signature(method_name)
      return TRAFFICESTIMATORSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return TRAFFICESTIMATORSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return TRAFFICESTIMATORSERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < AdwordsApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
