#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.2 on 2011-10-20 20:38:04.

require 'adwords_api/errors'

module AdwordsApi; module V201109; module UserListService
  class UserListServiceRegistry
    USERLISTSERVICE_METHODS = {:get=>{:input=>[{:type=>"Selector", :max_occurs=>1, :min_occurs=>0, :name=>:service_selector}], :output=>{:fields=>[{:type=>"UserListPage", :max_occurs=>1, :min_occurs=>0, :name=>:rval}], :name=>"get_response"}}, :mutate=>{:input=>[{:type=>"UserListOperation", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:operations}], :output=>{:fields=>[{:type=>"UserListReturnValue", :max_occurs=>1, :min_occurs=>0, :name=>:rval}], :name=>"mutate_response"}}}
    USERLISTSERVICE_TYPES = {:Selector=>{:fields=>[{:type=>"string", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:fields}, {:type=>"Predicate", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:predicates}, {:type=>"DateRange", :max_occurs=>1, :min_occurs=>0, :name=>:date_range}, {:type=>"OrderBy", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:ordering}, {:type=>"Paging", :max_occurs=>1, :min_occurs=>0, :name=>:paging}]}, :LogicalUserListOperand=>{:fields=>[]}, :DateRange=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:min}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:max}]}, :UserListPage=>{:fields=>[{:type=>"UserList", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:entries}], :base=>"Page"}, :RemarketingUserList=>{:fields=>[{:type=>"UserListConversionType", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:conversion_types}], :base=>"UserList"}, :UserListReturnValue=>{:fields=>[{:type=>"UserList", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:value}], :base=>"ListReturnValue"}, :ListReturnValue=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:list_return_value_type}], :abstract=>true}, :UserInterest=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:id}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:name}, {:type=>"SizeRange", :max_occurs=>1, :min_occurs=>0, :name=>:size_range}]}, :SoapHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:auth_token}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:client_customer_id}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:developer_token}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:user_agent}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:validate_only}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:partial_failure}]}, :OrderBy=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:field}, {:type=>"SortOrder", :max_occurs=>1, :min_occurs=>0, :name=>:sort_order}]}, :OperationAccessDenied=>{:fields=>[{:type=>"OperationAccessDenied.Reason", :max_occurs=>1, :min_occurs=>0, :name=>:reason}], :base=>"ApiError"}, :Operation=>{:fields=>[{:type=>"Operator", :max_occurs=>1, :min_occurs=>0, :name=>:operator}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:operation_type}], :abstract=>true}, :ExternalRemarketingUserList=>{:fields=>[], :base=>"UserList"}, :UserList=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:id}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:is_read_only}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:name}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:description}, {:type=>"UserListMembershipStatus", :max_occurs=>1, :min_occurs=>0, :name=>:status}, {:type=>"AccessReason", :max_occurs=>1, :min_occurs=>0, :name=>:access_reason}, {:type=>"AccountUserListStatus", :max_occurs=>1, :min_occurs=>0, :name=>:account_user_list_status}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:membership_life_span}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:size}, {:type=>"SizeRange", :max_occurs=>1, :min_occurs=>0, :name=>:size_range}, {:type=>"UserList.Type", :max_occurs=>1, :min_occurs=>0, :name=>:type}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:user_list_type}]}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:request_id}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:service_name}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:method_name}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:operations}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:response_time}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:units}]}, :Paging=>{:fields=>[{:type=>"int", :max_occurs=>1, :min_occurs=>0, :name=>:start_index}, {:type=>"int", :max_occurs=>1, :min_occurs=>0, :name=>:number_results}]}, :Page=>{:fields=>[{:type=>"int", :max_occurs=>1, :min_occurs=>0, :name=>:total_num_entries}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:page_type}], :abstract=>true}, :UserListConversionType=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:id}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:name}, {:type=>"UserListConversionType.Category", :max_occurs=>1, :min_occurs=>0, :name=>:category}]}, :UserListLogicalRule=>{:fields=>[{:type=>"UserListLogicalRule.Operator", :max_occurs=>1, :min_occurs=>0, :name=>:operator}, {:type=>"LogicalUserListOperand", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:rule_operands}]}, :Predicate=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:field}, {:type=>"Predicate.Operator", :max_occurs=>1, :min_occurs=>0, :name=>:operator}, {:type=>"string", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:values}]}, :LogicalUserList=>{:fields=>[{:type=>"UserListLogicalRule", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:rules}], :base=>"UserList"}, :UserListOperation=>{:fields=>[{:type=>"UserList", :max_occurs=>1, :min_occurs=>0, :name=>:operand}], :base=>"Operation"}}
    USERLISTSERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return USERLISTSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return USERLISTSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return USERLISTSERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < AdwordsApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
