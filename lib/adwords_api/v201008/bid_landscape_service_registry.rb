#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.2 on 2011-10-20 20:33:48.

require 'adwords_api/errors'

module AdwordsApi; module V201008; module BidLandscapeService
  class BidLandscapeServiceRegistry
    BIDLANDSCAPESERVICE_METHODS = {:get_bid_landscape=>{:input=>[{:type=>"BidLandscapeSelector", :max_occurs=>1, :min_occurs=>0, :name=>:selector}], :output=>{:fields=>[{:type=>"BidLandscape", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:rval}], :name=>"get_bid_landscape_response"}}}
    BIDLANDSCAPESERVICE_TYPES = {:BidLandscapeSelector=>{:fields=>[{:type=>"BidLandscapeIdFilter", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:id_filters}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:bid_landscape_selector_type}], :abstract=>true}, :DoubleValue=>{:fields=>[{:type=>"double", :max_occurs=>1, :min_occurs=>0, :name=>:number}], :base=>"NumberValue"}, :AdGroupBidLandscape=>{:fields=>[{:type=>"AdGroupBidLandscape.Type", :max_occurs=>1, :min_occurs=>0, :name=>:type}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:landscape_current}], :base=>"BidLandscape"}, :NumberValue=>{:fields=>[], :abstract=>true, :base=>"ComparableValue"}, :SoapHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:auth_token}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:client_customer_id}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:client_email}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:developer_token}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:user_agent}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:validate_only}, {:type=>"boolean", :max_occurs=>1, :min_occurs=>0, :name=>:partial_failure}]}, :EntityNotFound=>{:fields=>[{:type=>"EntityNotFound.Reason", :max_occurs=>1, :min_occurs=>0, :name=>:reason}], :base=>"ApiError"}, :AdGroupBidLandscapeSelector=>{:fields=>[], :base=>"BidLandscapeSelector"}, :BidLandscape=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:campaign_id}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:ad_group_id}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:start_date}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:end_date}, {:type=>"BidLandscape.LandscapePoint", :max_occurs=>:unbounded, :min_occurs=>0, :name=>:landscape_points}, {:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:bid_landscape_type}], :abstract=>true}, :OperationAccessDenied=>{:fields=>[{:type=>"OperationAccessDenied.Reason", :max_occurs=>1, :min_occurs=>0, :name=>:reason}], :base=>"ApiError"}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:request_id}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:operations}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:response_time}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:units}]}, :BidLandscapeIdFilter=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:campaign_id}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:ad_group_id}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:criterion_id}]}, :CriterionBidLandscape=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:criterion_id}], :base=>"BidLandscape"}, :"BidLandscape.LandscapePoint"=>{:fields=>[{:type=>"Money", :max_occurs=>1, :min_occurs=>0, :name=>:bid}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:clicks}, {:type=>"Money", :max_occurs=>1, :min_occurs=>0, :name=>:cost}, {:type=>"Money", :max_occurs=>1, :min_occurs=>0, :name=>:marginal_cpc}, {:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:impressions}]}, :ComparableValue=>{:fields=>[{:type=>"string", :max_occurs=>1, :min_occurs=>0, :name=>:comparable_value_type}], :abstract=>true}, :Money=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:micro_amount}], :base=>"ComparableValue"}, :LongValue=>{:fields=>[{:type=>"long", :max_occurs=>1, :min_occurs=>0, :name=>:number}], :base=>"NumberValue"}, :CriterionBidLandscapeSelector=>{:fields=>[], :base=>"BidLandscapeSelector"}}
    BIDLANDSCAPESERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return BIDLANDSCAPESERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return BIDLANDSCAPESERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return BIDLANDSCAPESERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < AdwordsApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
